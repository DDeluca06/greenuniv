<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Greensfield University - <%= course.CourseName %></title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>

<div class="max-w-3xl mx-auto p-6 bg-white rounded-lg shadow-lg mt-10">
  <% if (user && user.isFacilitator) { %>
  <button
    hx-get="/api/edit-course-form/<%= course.CourseID %>"
    hx-target="#edit-course-modal-content"
    hx-swap="innerHTML"
    hx-on::after-request="openEditModal()"
    class="bg-blue-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-blue-600 transition"
  >
    Edit Course
  </button>
  <% } %>

  <h3 class="text-2xl font-bold mt-4"><%= course.CourseName %></h3>
  <p class="text-gray-600 mt-2"><%= course.CourseDesc %></p>
  <p class="text-gray-700 font-semibold mt-2">Credits: <%= course?.Credits ?? 'N/A' %></p>
  <p class="text-gray-700">Course ID: <%= course.CourseID %></p>

  <% if (typeof enrolledStudents !== 'undefined' && enrolledStudents.length > 0) { %>
  <h3 class="text-lg font-semibold mt-6">Enrolled Students:</h3>
  <ul class="list-disc pl-4 mt-2 space-y-2">
    <!-- List of Enrolled Students -->
<ul class="list-disc pl-4 mt-2 space-y-2">
    <% enrolledStudents.forEach(student => { %>
        <li class="flex justify-between items-center bg-gray-100 p-3 rounded-lg shadow-sm">
            <span class="text-gray-800">Student: <%= student.StudentName %> (ID: <%= student.StudentID ? student.StudentID : 'MISSING_ID' %>)</span>
            <% if (user && user.isFacilitator) { %>
                <button onclick="openUnenrollModal('<%= student.StudentID %>', '<%= course.CourseID %>', '<%= student.StudentName %>')"
                        class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 transition">
                    Remove
                </button>
            <% } %>
        </li>
    <% }); %>    
</ul>

<!-- Unenroll Confirmation Modal -->
<div id="unenroll-modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
        <h2 class="text-xl font-semibold mb-4">Confirm Removal</h2>
        <p id="unenroll-message" class="text-gray-600"></p>
        <div class="mt-4 flex justify-end space-x-3">
            <button onclick="closeUnenrollModal()"
                    class="bg-gray-400 text-white px-4 py-2 rounded hover:bg-gray-500 transition">
                Cancel
            </button>
            <button id="confirm-unenroll"
                    class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition">
                Confirm
            </button>
        </div>
    </div>
</div>
  <% } else if (course) { %>
  <p class="text-gray-500 mt-4">No students enrolled in this course.</p>
  <% } else { %>
  <p class="text-red-500 mt-4">No course found.</p>
  <% } %>

  <a href="/dashboard" class="mt-6 inline-block bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition"> ‚Üê Back to Courses </a>
</div>

<!-- Modal -->
<div id="edit-course-modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
  <div id="edit-course-modal-content" class="bg-white p-6 rounded-lg shadow-lg w-1/3">
    <!-- HTMX will load the edit form here -->
  </div>
</div>

<script>
      document.addEventListener("htmx:afterSwap", function (event) {
    if (event.detail.target.id === "edit-course-modal-content") {
      openEditModal();
    }
  });
  
  function openEditModal() {
    document.getElementById("edit-course-modal").classList.remove("hidden");
  }

    let studentIdToRemove, courseIdToRemove;

    function openUnenrollModal(studentId, courseId, studentName) {
    console.log("Student ID received:", studentId, "Course ID:", courseId); // Debugging

    studentIdToRemove = studentId;
    courseIdToRemove = courseId;
    document.getElementById("unenroll-message").textContent = `Are you sure you want to remove ${studentName} from this course?`;
    document.getElementById("unenroll-modal").classList.remove("hidden");
}



    function closeUnenrollModal() {
        document.getElementById("unenroll-modal").classList.add("hidden");
    }

    document.getElementById("confirm-unenroll").addEventListener("click", function() {
    console.log("Sending unenroll request:", { studentId: studentIdToRemove, courseId: courseIdToRemove });

    fetch("/api/unenroll", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ studentId: studentIdToRemove, courseId: courseIdToRemove })
    })
    .then(response => response.json())
    .then(data => {
        console.log("Response received:", data);
        if (data.success) {
            document.querySelector(`button[onclick*="'${studentIdToRemove}', '${courseIdToRemove}'"]`)
                .closest("li").remove();
        } else {
            alert("Failed to unenroll student.");
        }
        closeUnenrollModal();
    })
    .catch(error => {
        console.error("Error:", error);
        alert("An error occurred.");
    });
});
</script>
